"""creating tables

Revision ID: b26312c3358b
Revises: 
Create Date: 2023-06-22 17:34:45.841612

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = 'b26312c3358b'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('services',
    sa.Column('service_id', sa.Integer(), nullable=False),
    sa.Column('title', sa.String(), nullable=False),
    sa.Column('description', sa.String(), nullable=False),
    sa.Column('price', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('service_id'),
    sa.UniqueConstraint('title')
    )
    op.create_table('users',
    sa.Column('user_id', sa.String(length=32), nullable=False),
    sa.Column('first_name', sa.String(length=50), nullable=False),
    sa.Column('last_name', sa.String(length=50), nullable=False),
    sa.Column('email', sa.String(length=200), nullable=False),
    sa.Column('password', sa.String(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('user_id'),
    sa.UniqueConstraint('email'),
    sa.UniqueConstraint('user_id')
    )
    op.create_table('addresses',
    sa.Column('address_id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('address_line1', sa.String(length=100), nullable=False),
    sa.Column('address_line2', sa.String(length=50), nullable=True),
    sa.Column('city', sa.String(length=50), nullable=False),
    sa.Column('state', sa.String(length=50), nullable=False),
    sa.Column('zip_code', sa.String(length=10), nullable=False),
    sa.Column('country', sa.String(length=50), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.user_id'], name=op.f('fk_addresses_user_id_users')),
    sa.PrimaryKeyConstraint('address_id')
    )
    op.create_table('therapists',
    sa.Column('therapist_id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.user_id'], name=op.f('fk_therapists_user_id_users')),
    sa.PrimaryKeyConstraint('therapist_id')
    )
    op.create_table('appointments',
    sa.Column('appointment_id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('therapist_id', sa.Integer(), nullable=True),
    sa.Column('service', sa.String(), nullable=False),
    sa.Column('appointment_date', sa.Date(), nullable=False),
    sa.Column('appointment_time', sa.Time(), nullable=False),
    sa.Column('duration', sa.Integer(), nullable=False),
    sa.Column('end_datetime', sa.Date(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['therapist_id'], ['therapists.therapist_id'], name=op.f('fk_appointments_therapist_id_therapists')),
    sa.ForeignKeyConstraint(['user_id'], ['users.user_id'], name=op.f('fk_appointments_user_id_users')),
    sa.PrimaryKeyConstraint('appointment_id')
    )
    op.create_table('therapist_services',
    sa.Column('therapist_id', sa.Integer(), nullable=True),
    sa.Column('service_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['service_id'], ['services.service_id'], name=op.f('fk_therapist_services_service_id_services')),
    sa.ForeignKeyConstraint(['therapist_id'], ['therapists.therapist_id'], name=op.f('fk_therapist_services_therapist_id_therapists'))
    )
    op.create_table('user_appointment',
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('appointment_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['appointment_id'], ['appointments.appointment_id'], name=op.f('fk_user_appointment_appointment_id_appointments')),
    sa.ForeignKeyConstraint(['user_id'], ['users.user_id'], name=op.f('fk_user_appointment_user_id_users'))
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('user_appointment')
    op.drop_table('therapist_services')
    op.drop_table('appointments')
    op.drop_table('therapists')
    op.drop_table('addresses')
    op.drop_table('users')
    op.drop_table('services')
    # ### end Alembic commands ###
