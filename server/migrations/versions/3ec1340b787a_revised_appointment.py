"""revised Appointment

Revision ID: 3ec1340b787a
Revises: 69ec7fbb017f
Create Date: 2023-06-15 20:46:59.652399

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '3ec1340b787a'
down_revision = '69ec7fbb017f'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('addresses', schema=None) as batch_op:
        batch_op.alter_column('address_line1',
               existing_type=sa.VARCHAR(length=100),
               nullable=False)
        batch_op.alter_column('city',
               existing_type=sa.VARCHAR(length=50),
               nullable=False)
        batch_op.alter_column('state',
               existing_type=sa.VARCHAR(),
               nullable=False)
        batch_op.alter_column('zip_code',
               existing_type=sa.VARCHAR(length=10),
               nullable=False)
        batch_op.alter_column('country',
               existing_type=sa.VARCHAR(length=50),
               nullable=False)

    with op.batch_alter_table('appointments', schema=None) as batch_op:
        batch_op.add_column(sa.Column('service_id', sa.Integer(), nullable=True))
        batch_op.alter_column('appointment_date',
               existing_type=sa.DATE(),
               nullable=False)
        batch_op.alter_column('appointment_time',
               existing_type=sa.TIME(),
               nullable=False)
        batch_op.create_foreign_key(batch_op.f('fk_appointments_service_id_services'), 'services', ['service_id'], ['service_id'])

    with op.batch_alter_table('services', schema=None) as batch_op:
        batch_op.alter_column('title',
               existing_type=sa.VARCHAR(length=100),
               nullable=False)
        batch_op.alter_column('description',
               existing_type=sa.VARCHAR(),
               nullable=False)
        batch_op.alter_column('price',
               existing_type=sa.INTEGER(),
               nullable=False)

    with op.batch_alter_table('users', schema=None) as batch_op:
        batch_op.alter_column('first_name',
               existing_type=sa.VARCHAR(),
               nullable=False)
        batch_op.alter_column('last_name',
               existing_type=sa.VARCHAR(),
               nullable=False)
        batch_op.alter_column('email',
               existing_type=sa.VARCHAR(length=50),
               nullable=False)
        batch_op.alter_column('password',
               existing_type=sa.VARCHAR(),
               nullable=False)

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('users', schema=None) as batch_op:
        batch_op.alter_column('password',
               existing_type=sa.VARCHAR(),
               nullable=True)
        batch_op.alter_column('email',
               existing_type=sa.VARCHAR(length=50),
               nullable=True)
        batch_op.alter_column('last_name',
               existing_type=sa.VARCHAR(),
               nullable=True)
        batch_op.alter_column('first_name',
               existing_type=sa.VARCHAR(),
               nullable=True)

    with op.batch_alter_table('services', schema=None) as batch_op:
        batch_op.alter_column('price',
               existing_type=sa.INTEGER(),
               nullable=True)
        batch_op.alter_column('description',
               existing_type=sa.VARCHAR(),
               nullable=True)
        batch_op.alter_column('title',
               existing_type=sa.VARCHAR(length=100),
               nullable=True)

    with op.batch_alter_table('appointments', schema=None) as batch_op:
        batch_op.drop_constraint(batch_op.f('fk_appointments_service_id_services'), type_='foreignkey')
        batch_op.alter_column('appointment_time',
               existing_type=sa.TIME(),
               nullable=True)
        batch_op.alter_column('appointment_date',
               existing_type=sa.DATE(),
               nullable=True)
        batch_op.drop_column('service_id')

    with op.batch_alter_table('addresses', schema=None) as batch_op:
        batch_op.alter_column('country',
               existing_type=sa.VARCHAR(length=50),
               nullable=True)
        batch_op.alter_column('zip_code',
               existing_type=sa.VARCHAR(length=10),
               nullable=True)
        batch_op.alter_column('state',
               existing_type=sa.VARCHAR(),
               nullable=True)
        batch_op.alter_column('city',
               existing_type=sa.VARCHAR(length=50),
               nullable=True)
        batch_op.alter_column('address_line1',
               existing_type=sa.VARCHAR(length=100),
               nullable=True)

    # ### end Alembic commands ###
